window.SIDEBAR_ITEMS = {"enum":[["NodeKeyConfig","The configuration of a node’s secret key, describing the type of key and how it is obtained. A node’s identity keypair is the result of the evaluation of the node key configuration."],["NonReservedPeerMode","The policy for connections to non-reserved peers."],["PublicKey","The public key of a node’s identity keypair."],["Role","Role of the local node."],["Secret","The configuration options for obtaining a secret key `K`."],["SyncMode","Sync operation mode."],["TransactionImport","Result of the transaction import."],["TransportConfig","Configuration for the transport layer."]],"macro":[["build_multiaddr","Easy way for a user to create a `Multiaddr`."]],"mod":[["identity","A node’s network identity keys."]],"struct":[["EmptyTransactionPool","Dummy implementation of the [`TransactionPool`] trait for a transaction pool that is always empty and discards all incoming transactions."],["IncomingRequest","A single request received by a peer on a request-response protocol."],["NetworkConfiguration","Network service configuration."],["NonDefaultSetConfig","Extension to [`SetConfig`] for sets that aren’t the default set."],["OutgoingResponse","Response for an incoming request to be send by a request protocol handler."],["Params","Network initialization parameters."],["ProtocolId","Protocol name prefix, transmitted on the wire for legacy protocol names. I.e., `dot` in `/dot/sync/2`. Should be unique for each chain. Always UTF-8. Deprecated in favour of genesis hash & fork ID based protocol names."],["RequestResponseConfig","Configuration for a single request-response protocol."],["SetConfig","Configuration for a set of nodes."]],"trait":[["TransactionPool","Transaction pool interface"],["WarpSyncProvider","Warp sync backend. Handles retrieveing and verifying warp sync proofs."]],"type":[["Ed25519Secret","The options for obtaining a Ed25519 secret key."],["TransactionImportFuture","Future resolving to transaction import result."]]};